{"version":3,"sources":["pages/Account/AccountSideBar.js","pages/Account/Bookings.js","pages/Account/ChangePassword.js","pages/Account/Account.js"],"names":["AccountSideBar","props","className","src","to","Bookings","cancelBooking","bid","location","a","swal","text","icon","buttons","url","window","apiHost","data","token","axios","post","msg","title","bookings","map","booking","i","dates","moment","checkIn","format","checkOut","key","status","type","venueData","conf","numberOfGuests","totalNights","pricePerNight","totalPrice","onClick","id","console","log","ChangePass","state","newPassword","confirmPassword","handleSubmit","e","preventDefault","auth","res","onSubmit","this","class","placeholder","onChange","setState","target","value","Component","connect","Account","pastBookings","upcomingBookings","accountUrl","resp","forEach","today","diff","push","exact","path","render","component","ChangePassword"],"mappings":"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","file":"static/js/13.a6aa9022.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Account.css';\nimport { Link } from 'react-router-dom'\n\nfunction AccountSideBar(props){\n    return(\n        <ul className=\"sidenav sidenav-fixed\">\n            <li>\n                <div className=\"user-view valign-wrapper center-align\">\n                    <img className=\"\" src=\"https://airbnb-clone-prexel-images.s3.amazonaws.com/genericAvatar.png\" />\n                </div>\n            </li>\n            <li>\n                <Link to=\"/account/reservations/confirmed\">Confirmed Reservations</Link>\n            </li>\n            <li>\n                <Link to=\"/account/reservations/past\">Past Reservations</Link>\n            </li>\n            <li>\n                <Link to=\"/account/change-pass\">Change Password</Link>\n            </li>\n        </ul>\n    )\n}\n\nexport default AccountSideBar;\n","import React from 'react';\nimport moment from 'moment';\nimport swal from 'sweetalert';\nimport axios from 'axios';\n\nfunction Bookings(props){\n\n    const cancelBooking = async(bid,location)=>{\n        // console.log(bid,location);\n        const cancelReservation = await swal({\n            text: `Are you sure you want to cancel your trip to ${location}`,\n            icon: 'warning',\n            buttons: true\n        });\n\n        if(cancelReservation){\n            const url = `${window.apiHost}/reservation/cancel`;\n            const data = {\n                token: props.token,\n                bid,\n            }\n            const resp = await axios.post(url,data);\n            if(resp.data.msg === \"cancelled\"){\n                swal({\n                    title: \"Cancelled\",\n                    icon: \"success\"\n                })\n            }else{\n                swal({\n                    title: \"There was an error cancelling\",\n                    icon: \"error\",\n                })\n            }\n        }\n    }\n\n    const bookings = props.bookings.map((booking, i)=>{\n        const dates = `${moment(booking.checkIn).format('MMM Do')} - ${moment(booking.checkOut).format('MMM Do YYYY')}`;\n        return(\n            <tr key={i} className=\"booking-row\">\n                <td>{booking.status === 'confirmed' && props.type === 'past'\n                        ? \"complete\"\n                        : booking.status\n                    }</td>\n                <td>\n                    <div className=\"booking-detail\">{dates}</div>\n                    <div className=\"booking-detail\">{booking.venueData.title}</div>\n                    <div className=\"booking-detail\">{booking.venueData.location}</div>\n                </td>\n                <td>\n                    <div className=\"booking-detail\">Confirmation #: {booking.conf}</div>\n                    <div className=\"booking-detail\">{booking.numberOfGuests} Guests, {booking.totalNights} Nights</div>\n                    <div className=\"booking-detail\">${booking.pricePerNight} per night</div>\n                    <div className=\"booking-detail\">${booking.totalPrice} Total</div>\n                </td>\n                <td>\n                    <div className=\"booking-detail pointer\">\n                        Print Reservation\n                    </div>\n                    {props.type === \"upcoming\" && booking.status !== \"cancelled\"\n                        ? <div onClick={()=>cancelBooking(booking.id,booking.venueData.location)} className=\"booking-detail pointer\">Cancel Confirmation</div>\n                        : <></>\n                    }\n                </td>\n            </tr>\n        )\n    })\n\n    console.log(props);\n    return(\n        <table className=\"booking\">\n            <thead>\n                <tr>\n                    <th>Status</th>\n                    <th>Dates and location</th>\n                    <th>Details</th>\n                    <th>Actions</th>\n                </tr>\n            </thead>\n            <tbody>\n                {bookings}\n            </tbody>\n        </table>\n    )\n}\n\nexport default Bookings","import React, { Component } from 'react';\nimport swal from 'sweetalert';\nimport axios from 'axios';\nimport {connect} from 'react-redux'\nclass ChangePass extends Component{\n\n    state = { \n        newPassword: \"\",\n        confirmPassword: \"\",\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        const newPassword = this.state.newPassword;\n        const confirmPassword = this.state.confirmPassword;\n        if (newPassword !== confirmPassword) {\n          swal({\n            title: \"Password don't match\",\n            icon: \"error\",\n          });\n        } else {\n            const data = {\n                token: this.props.auth.token,\n                newPassword,\n            }\n            const url = `${window.apiHost}/users/change-password`;\n            const res = await axios.post(url, data);\n            console.log(res.data);\n          if (res.data.msg === \"passUpdated\") {\n            swal({\n              title: \"Password is updated\",\n              icon: \"success\",\n            });\n          } else {\n            swal({\n              title: \"There was a error cancelling\",\n              icon: \"error\",\n            });\n          }\n        }\n        console.log(newPassword);\n    };\n    render(){\n        return(\n            <div className=\"change-pass center\">\n                <h1>Change Your Password</h1>\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"row\">\n                        <div className=\"col s12\">\n                            <div className=\"col s6 search-box-form\">\n                                <div class=\"form-label\">New Password</div>\n                                <div class=\"input-field\" id=\"where\">\n                                    <input \n                                        class=\"browser-default\" \n                                        placeholder=\"New Password\" \n                                        type=\"password\" \n                                        onChange={(e)=>this.setState({newPassword: e.target.value})}\n                                        value={this.state.newPassword} />\n                                </div>\n                            </div>                                \n\n                            <div className=\"col s6 search-box-form\">\n                                <div class=\"form-label\">Confirm Password</div>\n                                <div class=\"input-field\" id=\"where\">\n                                    <input \n                                        class=\"browser-default\" \n                                        placeholder=\"Confirm Password\" \n                                        type=\"password\" \n                                        onChange={(e)=>this.setState({confirmPassword: e.target.value})}\n                                        value={this.state.confirmPassword} />\n                                </div>\n                            </div>\n                        </div> \n                        <input type=\"submit\" className=\"btn-large waves-effect waves-light red accent-2\" value=\"submit\"/>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    return{\n        auth: state.auth,\n    }\n}\n\nexport default connect(mapStateToProps)(ChangePass);\n","import React, { Component } from 'react';\nimport './Account.css';\nimport { connect } from 'react-redux'\n// import { bindActionCreators } from 'redux';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Route } from 'react-router-dom'\nimport AccountSideBar from './AccountSideBar';\nimport Bookings from './Bookings';\nimport ChangePassword from './ChangePassword'\n\nclass Account extends Component{\n\n    state = {\n        pastBookings: [],\n        upcomingBookings: [],\n    }\n\n    async componentDidMount(){\n        const accountUrl = `${window.apiHost}/users/getBookings`;\n        const data = {\n            token: this.props.auth.token,\n        }\n        const resp = await axios.post(accountUrl,data);\n        console.log(resp.data);\n        let pastBookings = []\n        let upcomingBookings = [];\n        resp.data.forEach(booking => {\n            const today = moment(); //get today's date so we know what is past and what is future\n            const checkOutDate = moment(booking.checkOut);\n            const diffDays = checkOutDate.diff(today,\"days\");\n            if(diffDays < 0){\n                pastBookings.push(booking);\n            }else{\n                upcomingBookings.push(booking);\n            }\n        });\n        this.setState({\n            pastBookings,\n            upcomingBookings,\n        })\n    }\n\n    render(){\n        const { pastBookings, upcomingBookings } = this.state;\n        // console.log(pastBookings);\n        // console.log(upcomingBookings);\n        return(\n            <div className=\"account container-fluid\">\n                <AccountSideBar />\n                <div className=\"row\">\n                    <div className=\"col s8 offset-s3\">\n                        <Route exact path=\"/account\" render={()=>\n                            <h1>Choose an option on the left!</h1>\n                        } />\n                        <Route exact path=\"/account/reservations/confirmed\" render={()=>\n                            <Bookings type=\"upcoming\" bookings={upcomingBookings} token={this.props.auth.token} />\n                        } />\n                        <Route exact path=\"/account/reservations/past\">\n                            <Bookings type=\"past\" bookings={pastBookings} />\n                        </Route>\n                        <Route exact path=\"/account/change-pass\" component={ChangePassword} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nfunction mapStateToProps(state){\n    return{\n        auth: state.auth,\n    }\n}\n\nexport default connect(mapStateToProps)(Account);\n"],"sourceRoot":""}